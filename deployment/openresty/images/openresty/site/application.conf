
location = /hello {

    content_by_lua_block {
        ngx.header.content_type = 'text/html';
        ngx.say( '<html><h1 align="center">hello there!</h1></html>' )
        
        local redis = require( 'resty.redis' )
        local red = redis:new()

        red:set_timeout( 1000 )
        local ok, err = red:connect( 'redis.default.svc.cluster.local', 6379 )

        if not ok then
            ngx.say( "failed to connect: ", err )
            return
        end
        
        local res, err = red:info()
        ngx.say( '<h2>redis</h2>' )
        ngx.say( '<pre style="font-size: 18px">' )
        ngx.say( res )
        ngx.say( '</pre>' )
        
        local ok, err = red:close()
    }
    
}

location = /bye {

    content_by_lua_block {
        ngx.header.content_type = 'text/html';
        ngx.say( '<html><h1 align="center">bye then!</h1></html>' )
        
        local cjson = require( 'cjson' )
        local pretty = require ( 'resty.prettycjson' )
        local postgresql = require( 'pgmoon' )
        
        local pg = postgresql.new( {
            host = "postgresql.default.svc.cluster.local",
            port = "5432",
            database = "postgres",
            user = "postgres",
            password = "admin123"
        } )
    
        assert ( pg:connect() )
    
        local res = assert( pg:query( 'SELECT * FROM pg_database' ) )
        
        ngx.say( '<h2>postgresql</h2>' )
        ngx.say( '<pre style="font-size: 18px">' )
        ngx.say( cjson.encode( res ) )
        ngx.say( pretty( res ) )
        ngx.say( '</pre>' )

        local ok, err = pg:keepalive()
    }
}
 
include '/usr/local/openresty/site/dynamic/*/endpoints.nginx';

root /usr/local/openresty/site/static;
index index.html;
